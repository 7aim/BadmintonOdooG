# -*- coding: utf-8 -*-
from odoo import models, fields, api
from datetime import datetime, timedelta

class BadmintonSessionFilter(models.TransientModel):
    _name = 'badminton.session.filter.genclik'
    _description = 'Badminton SessiyalarÄ± Filtri'

    # Tarix filtri sahÉ™lÉ™ri
    date_filter = fields.Selection([
        ('all', 'BÃ¼tÃ¼n TarixlÉ™r'),
        ('today', 'Bu GÃ¼n'),
        ('week', 'Bu HÉ™ftÉ™'),
        ('month', 'Bu Ay'),
        ('year', 'Bu Ä°l'),
        ('custom', 'XÃ¼susi Tarix')
    ], string='ğŸ“… Tarix Filtri', default='month', required=True)
    
    date_from = fields.Date('ğŸ“… BaÅŸlanÄŸÄ±c Tarix')
    date_to = fields.Date('ğŸ“… BitmÉ™ Tarix')
    
    def _get_date_domain(self):
        """Tarix filtrinÉ™ É™sasÉ™n domain qaytarÄ±r"""
        today = fields.Date.today()
        
        if self.date_filter == 'all':
            return []
        elif self.date_filter == 'today':
            return [('start_time', '>=', datetime.combine(today, datetime.min.time())),
                    ('start_time', '<=', datetime.combine(today, datetime.max.time()))]
        elif self.date_filter == 'week':
            # HÉ™ftÉ™nin ilk vÉ™ son gÃ¼nÃ¼nÃ¼ hesabla (Bazar ertÉ™si - Bazar)
            weekday = today.weekday()
            date_from = today - timedelta(days=weekday)
            date_to = date_from + timedelta(days=6)
            return [('start_time', '>=', datetime.combine(date_from, datetime.min.time())),
                    ('start_time', '<=', datetime.combine(date_to, datetime.max.time()))]
        elif self.date_filter == 'month':
            # AyÄ±n ilk vÉ™ son gÃ¼nlÉ™rini hesabla
            date_from = today.replace(day=1)
            if today.month == 12:
                date_to = today.replace(year=today.year+1, month=1, day=1) - timedelta(days=1)
            else:
                date_to = today.replace(month=today.month+1, day=1) - timedelta(days=1)
            return [('start_time', '>=', datetime.combine(date_from, datetime.min.time())),
                    ('start_time', '<=', datetime.combine(date_to, datetime.max.time()))]
        elif self.date_filter == 'year':
            # Ä°lin ilk vÉ™ son gÃ¼nlÉ™rini hesabla
            date_from = today.replace(month=1, day=1)
            date_to = today.replace(month=12, day=31)
            return [('start_time', '>=', datetime.combine(date_from, datetime.min.time())),
                    ('start_time', '<=', datetime.combine(date_to, datetime.max.time()))]
        elif self.date_filter == 'custom' and self.date_from and self.date_to:
            return [('start_time', '>=', datetime.combine(self.date_from, datetime.min.time())),
                    ('start_time', '<=', datetime.combine(self.date_to, datetime.max.time()))]
        return []
        
    def action_apply_filter(self):
        domain = self._get_date_domain()
        
        return {
            'name': 'FiltrlÉ™nmiÅŸ Sessiyalar',
            'type': 'ir.actions.act_window',
            'res_model': 'badminton.session.genclik',
            'view_mode': 'list,form',
            'domain': domain,
        }
